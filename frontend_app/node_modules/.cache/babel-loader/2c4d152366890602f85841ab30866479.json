{"ast":null,"code":"import { useHistory } from 'react-router-dom';\nimport axiosInstance from './axiosjuicer';\n\nclass Auth {\n  constructor() {\n    this.authenticated = false;\n  }\n\n  register(uusername, ppassword) {\n    axiosInstance.post('newuser/', {\n      username: uusername,\n      password: ppassword\n    }).then(res => {\n      //const history = useHistory();\n      //window.location.href = theRedirect\n      window.location.href = 'http://127.0.0.1:3000/login'; //console.log('DONE')\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  login(login, ppassword, theRedirect) {\n    // make a function to actually Login\n    axiosInstance.post('token/', {\n      username: login,\n      password: ppassword\n    }).then(res => {\n      localStorage.setItem('access_token', res.data.access); //console.log('REFRESH TOKEN IS');\n      //console.log(res.data.refresh);\n\n      localStorage.setItem('refresh_token', res.data.refresh);\n      localStorage.setItem('theusername', login); //history.push('/issues')\n\n      if (theRedirect) {\n        window.location.href = theRedirect;\n      } else {\n        window.location.href = 'http://127.0.0.1:3000/';\n      }\n    }).catch(err => {\n      //console.log(err.response.data['detail']);\n      //console.log(err);\n      console.log('idk man'); //alert('Try again');\n    });\n  }\n\n  logout() {\n    // make a function to actually Logout\n    this.authenticated = false;\n    localStorage.clear();\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n\n  isModerator() {\n    axiosInstance.get('isMod/').then(res => {\n      if (res.data['isMod']) {\n        console.log('login:');\n        console.log(res.data['isMod']);\n        localStorage.setItem('isMod', true);\n      } else {\n        localStorage.setItem('isMod', false);\n        console.log(res.data['isMod']);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["C:/Users/LENOVO S30/Documents/Reactjs/theapp/src/components/auth.js"],"names":["useHistory","axiosInstance","Auth","constructor","authenticated","register","uusername","ppassword","post","username","password","then","res","window","location","href","catch","err","console","log","login","theRedirect","localStorage","setItem","data","access","refresh","logout","clear","isAuthenticated","isModerator","get"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,eAA1B;;AAGA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,GAAG;AACV,SAAKC,aAAL,GAAqB,KAArB;AACH;;AAEDC,EAAAA,QAAQ,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AAC1BN,IAAAA,aAAa,CAACO,IAAd,CAAmB,UAAnB,EAA8B;AAACC,MAAAA,QAAQ,EAACH,SAAV;AAAqBI,MAAAA,QAAQ,EAACH;AAA9B,KAA9B,EAAwEI,IAAxE,CAA8EC,GAAD,IAAQ;AACjF;AACA;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,6BAAvB,CAHiF,CAIjF;AAEH,KAND,EAMGC,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KARD;AASH;;AAEDG,EAAAA,KAAK,CAACA,KAAD,EAAQb,SAAR,EAAmBc,WAAnB,EAA+B;AAAE;AAElCpB,IAAAA,aAAa,CAACO,IAAd,CAAmB,QAAnB,EAA4B;AAACC,MAAAA,QAAQ,EAACW,KAAV;AAAiBV,MAAAA,QAAQ,EAACH;AAA1B,KAA5B,EAAkEI,IAAlE,CAAwEC,GAAD,IAAQ;AAC3EU,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCX,GAAG,CAACY,IAAJ,CAASC,MAA9C,EAD2E,CAE3E;AACA;;AACAH,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCX,GAAG,CAACY,IAAJ,CAASE,OAA/C;AACAJ,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCH,KAApC,EAL2E,CAM3E;;AAEA,UAAGC,WAAH,EAAe;AACXR,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBM,WAAvB;AACH,OAFD,MAEK;AACDR,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,wBAAvB;AACH;AACJ,KAbD,EAaGC,KAbH,CAaUC,GAAD,IAAS;AACd;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAHc,CAId;AACH,KAlBD;AAqBH;;AAEDQ,EAAAA,MAAM,GAAE;AAAE;AACN,SAAKvB,aAAL,GAAqB,KAArB;AACAkB,IAAAA,YAAY,CAACM,KAAb;AACH;;AAEDC,EAAAA,eAAe,GAAE;AACb,WAAO,KAAKzB,aAAZ;AACH;;AAED0B,EAAAA,WAAW,GAAE;AAET7B,IAAAA,aAAa,CAAC8B,GAAd,CAAkB,QAAlB,EAA4BpB,IAA5B,CAAkCC,GAAD,IAAS;AAEtC,UAAGA,GAAG,CAACY,IAAJ,CAAS,OAAT,CAAH,EAAqB;AACjBN,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACY,IAAJ,CAAS,OAAT,CAAZ;AACAF,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,IAA9B;AACH,OAJD,MAKI;AACAD,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B,KAA9B;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACY,IAAJ,CAAS,OAAT,CAAZ;AACH;AAGJ,KAbD,EAaGR,KAbH,CAaSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAfD;AAgBH;;AArEM;;AAwEX,eAAe,IAAIf,IAAJ,EAAf","sourcesContent":["import { useHistory } from 'react-router-dom';\r\nimport axiosInstance from './axiosjuicer'\r\n\r\n\r\nclass Auth {\r\n    constructor() {\r\n        this.authenticated = false;\r\n    }\r\n\r\n    register(uusername, ppassword){\r\n        axiosInstance.post('newuser/',{username:uusername, password:ppassword}).then((res) =>{\r\n            //const history = useHistory();\r\n            //window.location.href = theRedirect\r\n            window.location.href = 'http://127.0.0.1:3000/login';        \r\n            //console.log('DONE')\r\n            \r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    login(login, ppassword, theRedirect){ // make a function to actually Login\r\n\r\n        axiosInstance.post('token/',{username:login, password:ppassword}).then((res) =>{\r\n            localStorage.setItem('access_token', res.data.access);\r\n            //console.log('REFRESH TOKEN IS');\r\n            //console.log(res.data.refresh);\r\n            localStorage.setItem('refresh_token', res.data.refresh);\r\n            localStorage.setItem('theusername', login);\r\n            //history.push('/issues')\r\n\r\n            if(theRedirect){\r\n                window.location.href = theRedirect\r\n            }else{\r\n                window.location.href = 'http://127.0.0.1:3000/'\r\n            }\r\n        }).catch((err) => {\r\n            //console.log(err.response.data['detail']);\r\n            //console.log(err);\r\n            console.log('idk man');\r\n            //alert('Try again');\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    logout(){ // make a function to actually Logout\r\n        this.authenticated = false;\r\n        localStorage.clear();\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticated;\r\n    }\r\n\r\n    isModerator(){\r\n\r\n        axiosInstance.get('isMod/').then((res) => {           \r\n            \r\n            if(res.data['isMod']){\r\n                console.log('login:');\r\n                console.log(res.data['isMod']);\r\n                localStorage.setItem('isMod', true);\r\n            }\r\n            else{\r\n                localStorage.setItem('isMod', false);\r\n                console.log(res.data['isMod']);\r\n            }\r\n\r\n            \r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n}\r\n\r\nexport default new Auth();"]},"metadata":{},"sourceType":"module"}