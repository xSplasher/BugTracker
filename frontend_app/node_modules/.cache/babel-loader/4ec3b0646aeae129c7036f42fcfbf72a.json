{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://127.0.0.1:8000/api/';\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'JWT ' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    accept: 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n\n  if (error.response.status === 401) {\n    console.log('401 Status triggered');\n  }\n\n  if (error.response.status === 401 && originalRequest.url === baseURL + 'token/refresh/') {\n    window.location.href = '/login';\n    return Promise.reject(error);\n  }\n\n  if (error.response.status === 401 && error.response.data['detail']) {//console.log('yo');\n    //console.log(error.response);\n    //window.location.href = '/login';\n  }\n\n  if (error.response.data.code === 'token_not_valid' && error.response.status === 401) {\n    //console.log('i was here');\n    //console.log(localStorage.getItem('access_token'));\n    //console.log(localStorage.getItem('refresh_token'));\n    //localStorage.setItem('refresh_token','eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTYyNTI3NTcxOCwianRpIjoiY2Y0ZWQ3Yzg3OTgyNDhhYTgzMTI5OWJlNDExZTdjYTYiLCJ1c2VyX2lkIjoyfQ.93FAFn9geOR7yqjkjKYao8PE3Pu3LELWFP8ObQItWMo');\n    const refreshToken = localStorage.getItem('refresh_token');\n\n    if (refreshToken !== 'undefined') {\n      //console.log('TRYING TO REFRESH TOKEN');\n      //console.log(refreshToken)\n      const tokenParts = JSON.parse(atob(refreshToken.split('.')[1])); // exp date in token is expressed in seconds, while now() returns milliseconds:\n\n      const now = Math.ceil(Date.now() / 1000); //console.log(tokenParts.exp);\n\n      if (tokenParts.exp > now) {\n        return axiosInstance.post('/token/refresh/', {\n          refresh: refreshToken\n        }).then(response => {\n          //localStorage.clear();\n          localStorage.setItem('access_token', response.data.access); //localStorage.setItem('refresh_token', response.data.refresh);\n          //console.log('was i here ?');\n          //console.log(localStorage.getItem('refresh_token'));\n\n          axiosInstance.defaults.headers['Authorization'] = 'JWT ' + response.data.access;\n          originalRequest.headers['Authorization'] = 'JWT ' + response.data.access;\n          return axiosInstance(originalRequest);\n        }).catch(err => {//console.log(err);\n        });\n      } else {\n        //console.log('Refresh token is expired', tokenParts.exp, now);\n        window.location.href = '/login/';\n      }\n    } else {\n      //console.log('Refresh token not available.');\n      window.location.href = '/login/';\n    }\n  } // specific error handling done elsewhere\n\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["/home/xsplasher/api_django/BugTracker/frontend_app/src/components/axiosjuicer.js"],"names":["axios","baseURL","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","status","console","log","url","window","location","href","Promise","reject","data","code","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","exp","post","refresh","then","setItem","access","defaults","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'http://127.0.0.1:8000/api/';\n\nconst axiosInstance = axios.create({\n\tbaseURL: baseURL,\n\ttimeout: 5000,\n\theaders: {\n\t\tAuthorization: localStorage.getItem('access_token')\n\t\t\t? 'JWT ' + localStorage.getItem('access_token')\n\t\t\t: null,\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t}, \n});\n\naxiosInstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response;\n\t},\n\tasync function (error) {\n\t\tconst originalRequest = error.config;\n\n\t\tif (\n\t\t\terror.response.status === 401\n\t\t) {\n\t\t\tconsole.log('401 Status triggered')\n\t\t}\n\n\t\tif (\n\t\t\terror.response.status === 401 &&\n\t\t\toriginalRequest.url === baseURL + 'token/refresh/'\n\t\t) {\n\t\t\twindow.location.href = '/login';\n\t\t\treturn Promise.reject(error);\n\t\t}\n\n\t\tif(error.response.status === 401 && error.response.data['detail']){\n\t\t\t//console.log('yo');\n\t\t\t//console.log(error.response);\n\t\t\t//window.location.href = '/login';\n\t\t}\n\n\t\tif (\n\t\t\terror.response.data.code === 'token_not_valid' &&\n\t\t\terror.response.status === 401\n\t\t) {\n\t\t\t//console.log('i was here');\n\t\t\t//console.log(localStorage.getItem('access_token'));\n\t\t\t//console.log(localStorage.getItem('refresh_token'));\n\t\t\t\n\n\t\t\t//localStorage.setItem('refresh_token','eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTYyNTI3NTcxOCwianRpIjoiY2Y0ZWQ3Yzg3OTgyNDhhYTgzMTI5OWJlNDExZTdjYTYiLCJ1c2VyX2lkIjoyfQ.93FAFn9geOR7yqjkjKYao8PE3Pu3LELWFP8ObQItWMo');\n\t\t\tconst refreshToken = localStorage.getItem('refresh_token');\n\n\t\t\tif (refreshToken !== 'undefined') {\n\t\t\t\t//console.log('TRYING TO REFRESH TOKEN');\n\t\t\t\t//console.log(refreshToken)\n\t\t\t\tconst tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n\n\t\t\t\t// exp date in token is expressed in seconds, while now() returns milliseconds:\n\t\t\t\tconst now = Math.ceil(Date.now() / 1000);\n\t\t\t\t//console.log(tokenParts.exp);\n\t\t\t\tif (tokenParts.exp > now) {\n\t\t\t\t\t\n\t\t\t\t\treturn axiosInstance\n\t\t\t\t\t\t.post('/token/refresh/', { refresh: refreshToken })\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\t//localStorage.clear();\n\t\t\t\t\t\t\tlocalStorage.setItem('access_token', response.data.access);\n\t\t\t\t\t\t\t//localStorage.setItem('refresh_token', response.data.refresh);\n\t\t\t\t\t\t\t//console.log('was i here ?');\n\t\t\t\t\t\t\t//console.log(localStorage.getItem('refresh_token'));\n\t\t\t\t\t\t\taxiosInstance.defaults.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\t\t\t\t\t\t\toriginalRequest.headers['Authorization'] =\n\t\t\t\t\t\t\t\t'JWT ' + response.data.access;\n\n\t\t\t\t\t\t\treturn axiosInstance(originalRequest);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\t\t//console.log(err);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t//console.log('Refresh token is expired', tokenParts.exp, now);\n\t\t\t\t\twindow.location.href = '/login/';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//console.log('Refresh token not available.');\n\t\t\t\twindow.location.href = '/login/';\n\t\t\t}\n\t\t}\n\n\t\t// specific error handling done elsewhere\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport default axiosInstance;"]},"metadata":{},"sourceType":"module"}