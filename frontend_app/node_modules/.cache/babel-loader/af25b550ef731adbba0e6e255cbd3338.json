{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO S30\\\\Documents\\\\Reactjs\\\\theapp\\\\src\\\\pages\\\\ListOfProjects.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport axiosInstance from '../components/axiosjuicer';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Divider from '@material-ui/core/Divider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(3),\n    margin: 'auto',\n    width: \"45%\"\n  },\n  image: {\n    width: 128,\n    height: 128\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}));\n\nfunction ListOfProjects() {\n  _s();\n\n  const classes = useStyles();\n  const [theprojects, settheprojects] = useState([]);\n  const [isMod, setisMod] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    axiosInstance.get('projects/all').then(res => {\n      if (res.data['status'] == 'success') {\n        settheprojects(res.data['data']);\n      }\n    });\n\n    if (localStorage.getItem('theusername')) {\n      axiosInstance.get('isMod/').then(res => {\n        if (res.data['isMod']) {\n          setisMod(res.data['isMod']);\n          localStorage.setItem('isMod', true);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: 30\n      },\n      children: \"All Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), (() => {\n      if (isMod) {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginLeft: \"21%\"\n          },\n          onClick: () => history.push('/newproject'),\n          className: \"btn btn-primary\",\n          type: \"button\",\n          value: \"New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this);\n      }\n    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 60\n      },\n      children: theprojects.map(aproject => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(MenuItem, {\n            component: Link,\n            to: `/project/${aproject.theid}`,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              xs: 12,\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  noWrap: true,\n                  gutterBottom: true,\n                  variant: \"subtitle1\",\n                  children: aproject.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                style: {\n                  float: 'right'\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  noWrap: true,\n                  gutterBottom: true,\n                  variant: \"subtitle1\",\n                  style: {\n                    float: \"right\"\n                  },\n                  children: aproject.issues.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListOfProjects, \"shnIHlLZbrpjLHjY64V3Lnnyrbk=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ListOfProjects;\nexport default ListOfProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfProjects\");","map":{"version":3,"sources":["C:/Users/LENOVO S30/Documents/Reactjs/theapp/src/pages/ListOfProjects.js"],"names":["axios","React","useEffect","useState","makeStyles","Link","useParams","useHistory","axiosInstance","Paper","Grid","Avatar","Typography","ButtonBase","Divider","MenuItem","useStyles","theme","root","flexGrow","paper","padding","spacing","margin","width","image","height","img","display","maxWidth","maxHeight","ListOfProjects","classes","theprojects","settheprojects","isMod","setisMod","history","get","then","res","data","localStorage","getItem","setItem","catch","err","console","log","textAlign","marginTop","marginLeft","push","map","aproject","theid","name","float","issues","length"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link, useParams, useHistory } from 'react-router-dom';\r\nimport axiosInstance from '../components/axiosjuicer'\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      margin: 'auto',\r\n      width:\"45%\"\r\n    },\r\n    image: {\r\n      width: 128,\r\n      height: 128,\r\n    },\r\n    img: {\r\n      margin: 'auto',\r\n      display: 'block',\r\n      maxWidth: '100%',\r\n      maxHeight: '100%',\r\n    },\r\n  }));\r\n  \r\n\r\n\r\nfunction ListOfProjects() {\r\n\r\n    const classes = useStyles();\r\n    const [theprojects, settheprojects] = useState([]);\r\n    const [isMod, setisMod] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('projects/all').then(res => {\r\n            if(res.data['status'] == 'success'){\r\n                settheprojects(res.data['data']);\r\n            }\r\n        });\r\n\r\n        if(localStorage.getItem('theusername')){\r\n            axiosInstance.get('isMod/').then((res) => {           \r\n            \r\n                if(res.data['isMod']){\r\n                    setisMod(res.data['isMod']);\r\n                    localStorage.setItem('isMod', true);\r\n                }\r\n    \r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }        \r\n    }, [])\r\n\r\n    return (\r\n\r\n        <>\r\n            {/*<Typography noWrap gutterBottom variant=\"subtitle1\" style={{textAlign:'center',marginTop:30,fontStyle:'bold'}}>\r\n                All Projects\r\n            </Typography>\r\n            */}\r\n\r\n            <h3 style={{textAlign:\"center\", marginTop:30}}>All Projects</h3>\r\n            \r\n            <div style={{marginTop:20}}></div>\r\n\r\n            {(() => {\r\n                if(isMod){\r\n                    return (\r\n                        <input style={{marginLeft:\"21%\"}} onClick={()=> history.push('/newproject')} className='btn btn-primary' type='button' value='New Project'/>\r\n                    );\r\n                }\r\n            })()}\r\n            \r\n            \r\n            <div style={{marginTop:60}}>\r\n\r\n            {theprojects.map((aproject) => (\r\n                <div className={classes.root}>\r\n                   <Paper className={classes.paper}>\r\n                        <MenuItem component={Link} to={`/project/${aproject.theid}`}>\r\n                        \r\n                            <Grid xs={12} container>\r\n                                <Grid item xs={6}>\r\n                                    <Typography noWrap gutterBottom variant=\"subtitle1\">\r\n                                        {aproject.name} \r\n                                    </Typography>                                    \r\n                                </Grid>\r\n\r\n                                <Grid item xs={6} style={{float:'right'}}>\r\n\r\n                                    <Typography noWrap gutterBottom variant=\"subtitle1\" style={{float:\"right\"}}>\r\n                                        {aproject.issues.length}\r\n                                    </Typography>   \r\n                                    \r\n                                </Grid>\r\n                            \r\n                            </Grid>\r\n                           \r\n                        </MenuItem>\r\n                    </Paper>\r\n                </div>\r\n            ))}\r\n            </div>\r\n\r\n\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n        {/*\r\n        <div className='mx-auto' style={{\"width\":\"30%\",\"color\":\"white\"}}>\r\n            \r\n            {theprojects.map((aproject) => (\r\n\r\n                <Link to={`/project/${aproject.theid}`} style={{textDecoration: \"none\",color: \"white\"}}>\r\n                    <div className='card' style={{\"marginBottom\":\"18px\"}}>\r\n                        <div className='card-body' style={{\"background\":\"black\"}}>\r\n                            {aproject.name} <span style={{\"float\":\"right\"}}>{aproject.issues.length}</span>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n                \r\n            ))}\r\n        </div>\r\n        */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfProjects\r\n"]},"metadata":{},"sourceType":"module"}