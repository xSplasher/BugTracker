{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO S30\\\\Documents\\\\Reactjs\\\\theapp\\\\src\\\\pages\\\\NewProject.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport axiosInstance from '../components/axiosjuicer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewProject = () => {\n  _s();\n\n  const [name, setname] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    if (!localStorage.getItem('theusername')) {\n      history.push('/login', window.location.href);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          \"textAlign\": \"center\",\n          marginTop: 60\n        },\n        children: \"Create an Issue :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => settitle(e.target.value),\n          className: \"form-control\",\n          name: \"issueText\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          \"textAlign\": \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          onClick: () => {\n            let theProject = project.trim();\n            let thePriority = priority.trim().toLowerCase();\n            let theAssignedUser = assignto.trim();\n\n            if (theusers.includes(theAssignedUser) && projects.includes(theProject) && priorities.includes(thePriority)) {\n              axiosInstance.post('issue/addnew', {\n                issue_name: title.trim(),\n                text: description.trim(),\n                created_by: localStorage.getItem('theusername'),\n                priority: thePriority,\n                assignto: theAssignedUser,\n                project_it_belongs_to: theProject\n              }).then(res => {\n                if (res.data['status'] == 'success') {\n                  window.location.reload();\n                } else {\n                  console.log('couldnt create the issue');\n                }\n              }).catch(err => {\n                console.log(err);\n              });\n            }\n          },\n          className: \"btn btn-primary\",\n          value: \"Create Issue\",\n          style: {\n            \"width\": \"30%\",\n            \"height\": \"45px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewProject, \"QufcjYeBZjD5BKiTx/Arb8+D7ho=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewProject;\nexport default NewProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProject\");","map":{"version":3,"sources":["C:/Users/LENOVO S30/Documents/Reactjs/theapp/src/pages/NewProject.js"],"names":["React","useEffect","useState","useHistory","useParams","axiosInstance","NewProject","name","setname","history","localStorage","getItem","push","window","location","href","marginTop","e","settitle","target","value","theProject","project","trim","thePriority","priority","toLowerCase","theAssignedUser","assignto","theusers","includes","projects","priorities","post","issue_name","title","text","description","created_by","project_it_belongs_to","then","res","data","reload","console","log","catch","err"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport axiosInstance from '../components/axiosjuicer'\r\n\r\nconst NewProject = () => {\r\n\r\n    const [name, setname] = useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if(!localStorage.getItem('theusername')){            \r\n            history.push('/login', window.location.href);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container'>\r\n            <form>\r\n\r\n                <h3 style={{\"textAlign\":\"center\",marginTop:60}}>Create an Issue :</h3>\r\n                \r\n                <div className=\"form-group\">\r\n                    <label>Name:</label>\r\n                    <input onChange={e => settitle(e.target.value)} className=\"form-control\" name='issueText' type=\"text\"/>\r\n                </div>\r\n                <br/>\r\n\r\n                <div style={{\"textAlign\":\"center\"}}>\r\n                    <input type=\"button\" onClick={() => {\r\n                        let theProject = project.trim();\r\n                        let thePriority = priority.trim().toLowerCase();\r\n                        let theAssignedUser = assignto.trim();\r\n\r\n                        if(theusers.includes(theAssignedUser) && projects.includes(theProject) && priorities.includes(thePriority)){\r\n                            axiosInstance.post('issue/addnew',{issue_name:title.trim(),text:description.trim(),created_by:localStorage.getItem('theusername'),priority:thePriority,assignto:theAssignedUser,project_it_belongs_to:theProject}).then(res => {\r\n                                if(res.data['status'] == 'success'){\r\n                                    window.location.reload();\r\n                                }\r\n                                else{\r\n                                    console.log('couldnt create the issue');\r\n                                }\r\n                            }).catch(err => {\r\n                                console.log(err);\r\n                            })\r\n                        }\r\n\r\n                    }} className=\"btn btn-primary\" value='Create Issue' style={{\"width\":\"30%\",\"height\":\"45px\"}}/>\r\n                </div>\r\n\r\n\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProject\r\n"]},"metadata":{},"sourceType":"module"}