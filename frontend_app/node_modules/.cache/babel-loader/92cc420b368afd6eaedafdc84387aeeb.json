{"ast":null,"code":"import axiosInstance from './axiosjuicer';\n\nclass Auth {\n  constructor() {\n    this.authenticated = false;\n  }\n\n  login(login, ppassword) {\n    // make a function to actually Login\n    console.log(typeof login);\n    console.log(login);\n    console.log(typeof ppassword);\n    console.log(ppassword);\n    /*this.authenticated = true;\r\n    localStorage.setItem('theusername', login);\r\n        axiosInstance.post('token/',{username:login, password:ppassword}).then((res) =>{\r\n        localStorage.setItem('access_token', res.data.access);\r\n        localStorage.setItem('refresh_token', res.data.refresh);\r\n        //history.push('/issues')\r\n        window.location.href = 'http://127.0.0.1:3000/issues'\r\n    });*/\n  }\n\n  logout() {\n    // make a function to actually Logout\n    this.authenticated = false;\n    localStorage.clear();\n  }\n\n  isAuthenticated() {\n    return this.authenticated;\n  }\n\n}\n\nexport default new Auth();","map":{"version":3,"sources":["C:/Users/LENOVO S30/Documents/Reactjs/theapp/src/components/auth.js"],"names":["axiosInstance","Auth","constructor","authenticated","login","ppassword","console","log","logout","localStorage","clear","isAuthenticated"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,eAA1B;;AAEA,MAAMC,IAAN,CAAW;AACPC,EAAAA,WAAW,GAAG;AACV,SAAKC,aAAL,GAAqB,KAArB;AACH;;AAEDC,EAAAA,KAAK,CAACA,KAAD,EAAOC,SAAP,EAAiB;AAAE;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,KAAnB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,SAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AAGK;;AAEDG,EAAAA,MAAM,GAAE;AAAE;AACN,SAAKL,aAAL,GAAqB,KAArB;AACAM,IAAAA,YAAY,CAACC,KAAb;AACH;;AAEDC,EAAAA,eAAe,GAAE;AACb,WAAO,KAAKR,aAAZ;AACH;;AA7BM;;AAgCX,eAAe,IAAIF,IAAJ,EAAf","sourcesContent":["import axiosInstance from './axiosjuicer'\r\n\r\nclass Auth {\r\n    constructor() {\r\n        this.authenticated = false;\r\n    }\r\n\r\n    login(login,ppassword){ // make a function to actually Login\r\n        console.log(typeof(login))\r\n        console.log(login)\r\n        console.log(typeof(ppassword))\r\n        console.log(ppassword)\r\n        /*this.authenticated = true;\r\n        localStorage.setItem('theusername', login);\r\n\r\n\r\n        axiosInstance.post('token/',{username:login, password:ppassword}).then((res) =>{\r\n            localStorage.setItem('access_token', res.data.access);\r\n            localStorage.setItem('refresh_token', res.data.refresh);\r\n            //history.push('/issues')\r\n            window.location.href = 'http://127.0.0.1:3000/issues'\r\n        });*/\r\n    }\r\n\r\n    logout(){ // make a function to actually Logout\r\n        this.authenticated = false;\r\n        localStorage.clear();\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticated;\r\n    }\r\n}\r\n\r\nexport default new Auth();"]},"metadata":{},"sourceType":"module"}